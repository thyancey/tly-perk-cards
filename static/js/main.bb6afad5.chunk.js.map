{"version":3,"sources":["themes/index.ts","scenes/main/components/card-details.tsx","scenes/main/components/card.tsx","app/hooks.ts","app/data/data.tsx","scenes/main/slice.tsx","scenes/main/components/card-back.tsx","scenes/main/components/card-pile.tsx","scenes/main/components/gamestats.tsx","scenes/main/components/lanebox.tsx","scenes/main/components/lanezones.tsx","scenes/main/index.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["createGlobalStyle","getColor","colorId","store","colors","black","grey_dark","grey","grey_light","white","brown_light","brown","brown_dark","green","green_light","red","pink","shadows","z1","z2","z3","breakpoints","mobile_tiny","mobile_medium","mobile_large","tablet","desktop","CARD_WIDTH","CARD_HEIGHT","Container","styled","div","CardDescription","p","ul","li","CardDetails","description","modifiers","size","normal","zoom","ImageContainer","TitleContainer","DescriptionContainer","CardImage","url","FrameOverlay","FrameBg","Card","cardIdx","cardData","onCardSelected","offsetIdx","stackType","style","undefined","left","top","console","log","anySize","onClick","frame","overlayImg","img","title","bgImg","useAppSelector","useSelector","ALL_CARDS_MAP","type","stat","value","DECK_DATA","id","idx","count","PARSED_CARDS_MAP","retMap","Object","keys","forEach","cardKey","rawModifiers","card","map","m","effect","deckSlice","createSlice","name","initialState","deckStatus","hand","gameStats","reducers","initCards","state","createDeck","dealCards","curDeckStatus","dS","active","dealtIndicies","drawCardIndicies","now","Date","getTime","includes","dealt","dealtAt","augmentStats","action","payload","chooseCard","chosenIdx","handIdx","laneId","h","lane","actions","getDeckStatus","data","getCardData","cardStatus","deckIdx","selectGameStats","createSelector","key","selectDealtHand","filter","selectDrawPile","d","cS","selectDiscardPile","sort","a","b","selectLaneCards","laneCards","l","availableDeck","i","length","drawnIdx","Math","floor","random","thingy","push","splice","allCards","cardInfo","j","FaceDownCard","css","mixinFontFamily","isDisabled","CardBack","onClickCard","CardPile","cards","isFaceDown","cardSize","onClickCardBack","cardDef","GameStats","gs","selectionActive","Bg","CardContainer","Label","LaneBox","onLaneSelected","laneText","getLaneText","LaneZones","LaneModeCover","isLaneMode","Modal","DetailContainer","LaneContainer","CardWrapper","CardStacks","DrawPile","DiscardPile","Header","Body","Main","dispatch","useDispatch","useState","heldCardIdx","setHeldCardIdx","dealtHand","drawPile","discardPile","useEffect","useMemo","tableCardSize","heldCard","ScHeader","ScStage","App","collapsed","setCollapsed","pages","route","text","element","className","to","path","configureStore","reducer","deckReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb6afad5.chunk.js","sourcesContent":["import { createGlobalStyle, css } from \"styled-components\"\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline:0;\r\n    box-sizing:border-box;\r\n  }\r\n  #root{\r\n    margin:0 auto;\r\n  }\r\n  h1, h2, h3, h4{\r\n    font-family: 'Bevan', cursive;\r\n  }\r\n  a, p, span, h5, h6{\r\n    font-family: 'Cabin', sans-serif;\r\n  }\r\n  h1{\r\n    font-size: 5rem;\r\n  }\r\n  h2{\r\n    font-size: 4rem;\r\n  }\r\n  h3{\r\n    font-size: 3.5rem;\r\n  }\r\n  h4{\r\n    font-size: 2.5rem;\r\n  }\r\n  h5{\r\n    font-size: 2rem;\r\n  }\r\n  p, span{\r\n    font-size:2rem;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-family: 'Cabin', sans-serif;\r\n    background-color: black;\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n  }\r\n`\r\n\r\ntype FontType = 'display' | 'details' | undefined;\r\nexport const mixinFontFamily = (style: FontType) => {\r\n  switch(style){\r\n    case 'display': return css`font-family: 'Bevan', cursive`;\r\n    default: return css`font-family: 'Cabin', sans-serif`;\r\n  }\r\n}\r\n\r\nexport const listColors = () => {\r\n  return Object.keys(store.colors);\r\n}\r\n\r\n\r\nexport const getColor = (colorId: tColor) => {\r\n  return store.colors[colorId] as CssString; \r\n}\r\n\r\nexport const getShadow = (shadowId: tShadow) => {\r\n  return store.shadows[shadowId] as CssString;\r\n}\r\n\r\nexport const getBreakpoint = (breakpointId: tBreakpoint) => {\r\n  return store.breakpoints[breakpointId] as CssString;\r\n}\r\n\r\n\r\n\r\n\r\ntype CssString = string;\r\n\r\ntype tShadow = 'z1' | 'z2' | 'z3';\r\nconst shadows = {\r\n  z1: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.16)',\r\n  z2: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.36)',\r\n  z3: '-.2rem .5rem 1rem .2rem rgba(0,0,0,.36)'\r\n}\r\ntype tColor = 'black' | 'grey_dark' |'grey' | 'grey_light' | 'white' | 'brown_dark' | 'brown' | 'brown_light' | 'green' | 'green_light' | 'red' | 'pink';\r\nconst colors = {\r\n  black: '#000000',\r\n  grey_dark: '#222034',\r\n  grey: '#847e87',\r\n  grey_light: '#9badb7',\r\n  white: '#fef8dd',\r\n  brown_light: '#eec398',\r\n  brown: '#8f563b',\r\n  brown_dark: '#663931',\r\n  green: '#4b692f',\r\n  green_light: '#6abe30',\r\n  red: '#ac3232',\r\n  pink: '#d77bba'\r\n}\r\n\r\ntype tBreakpoint = 'mobile_tiny' | 'mobile_medium' | 'mobile_large' | 'tablet' | 'desktop';\r\nconst breakpoints = {\r\n  mobile_tiny: '300px',\r\n  mobile_medium: '400px',\r\n  mobile_large: '500px',\r\n  tablet: '768px',\r\n  desktop: '1024px'\r\n}\r\n\r\ntype ThemeStore = {\r\n  colors: typeof colors,\r\n  shadows: typeof shadows,\r\n  breakpoints: typeof breakpoints\r\n}\r\n\r\nexport const store: ThemeStore = {\r\n  colors: colors,\r\n  shadows: shadows,\r\n  breakpoints: breakpoints\r\n}\r\n\r\nexport const CARD_WIDTH = '18rem';\r\nexport const CARD_HEIGHT = '30rem';","import styled from 'styled-components';\r\nimport { getColor } from '../../../themes';\r\nimport { CardModifier } from '../../../types';\r\n\r\nexport const Container = styled.div`\r\n  padding: 1.5rem 2rem;\r\n`\r\n\r\nexport const CardDescription = styled.p`\r\n  color: ${getColor('black')};\r\n  font-size:1.4rem;\r\n  text-align:center;\r\n`\r\n\r\nexport const ModifierContainer = styled.ul`\r\n  padding: 1rem;\r\n  border-radius:.5rem;\r\n  box-shadow: -.25rem -.25rem solid black;\r\n`\r\n\r\nexport const Modifier = styled.li`\r\n  span{\r\n    font-size:1.2rem;\r\n  }\r\n\r\n  span:first-child{\r\n    color:red;\r\n    font-weight: bold;\r\n  }\r\n\r\n  span:last-child{\r\n    color:green;\r\n    margin-left:1rem;\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  description: string,\r\n  modifiers: CardModifier[]\r\n}\r\n\r\nexport function CardDetails({ description, modifiers }: Props) {\r\n  const showModifier = false;\r\n\r\n  return (\r\n    <Container>\r\n      <CardDescription>{description}</CardDescription>\r\n      {showModifier && (<ModifierContainer>\r\n        {modifiers.map((m, i) => (\r\n          <Modifier key={m.effect.stat}>\r\n            <div>\r\n              <span>{`${m.effect.stat}:`}</span>\r\n              <span>{m.effect.value}</span>\r\n            </div>\r\n          </Modifier>\r\n        ))}\r\n      </ModifierContainer>)}\r\n    </Container>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { CARD_HEIGHT, CARD_WIDTH, getColor } from '../../../themes';\r\nimport { CardDef, CardScaleDef, StackType } from '../../../types';\r\nimport { CardDetails } from './card-details';\r\n\r\n\r\ntype ContainerProps = {\r\n  size: CardScaleDef;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  position:absolute;\r\n  width: ${CARD_WIDTH};\r\n  height: ${CARD_HEIGHT};\r\n  left:50%;\r\n  top:50%;\r\n  transform: translate(-50%, -50%);\r\n  transform: scale(${p => p.size.normal[0]}, ${p => p.size.normal[1]}) translate(-50%, -50%);\r\n  cursor: pointer;\r\n  transform-origin: top;\r\n  z-index:1;\r\n\r\n  &:hover{\r\n    transform: scale(${p => p.size.zoom[0]}, ${p => p.size.zoom[1]}) rotate(-0.005turn) translate(-50%, -50%);\r\n    transition: transform .2s;\r\n    z-index:10;\r\n  }\r\n`\r\nexport const ImageContainer = styled.div`\r\n  position:relative;\r\n  height:45%;\r\n  width:100%;\r\n  padding:1rem;\r\n`\r\nexport const TitleContainer = styled.div`\r\n  position:relative;\r\n  height:10%;\r\n  width:100%;\r\n\r\n  >div{\r\n    min-height: 1rem;\r\n\r\n    position:absolute;\r\n    width:100%;\r\n    top:50%;\r\n    transform: translateY(-50%);\r\n    padding: .5rem;\r\n    z-index:2;\r\n\r\n\r\n    >p{\r\n      font-size: 1.5rem;\r\n      text-align:center;\r\n      font-weight: bold;\r\n      color: ${getColor('black')};\r\n    }\r\n  }\r\n`\r\nexport const DescriptionContainer = styled.div`\r\n  height:45%;\r\n  width:100%;\r\n  padding:1rem 1rem;\r\n`\r\ninterface CardImageProps {\r\n  url: string;\r\n}\r\nexport const CardImage = styled.div<CardImageProps>`\r\n  width:100%;\r\n  height:100%;\r\n  background: url(${p => p.url}) no-repeat center;\r\n  background-size:cover;\r\n`\r\n\r\nexport const FrameOverlay = styled.div<CardImageProps>`\r\n  position:absolute;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  left:0;\r\n  z-index:1;\r\n  background: url(${p => p.url}) no-repeat center;\r\n  background-size:cover;\r\n`\r\n\r\nexport const FrameBg = styled.div<CardImageProps>`\r\n  position:absolute;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  left:0;\r\n  z-index:-1;\r\n  background: url(${p => p.url}) no-repeat center;\r\n  background-size:cover;\r\n`\r\ninterface Props {\r\n  cardIdx?: number;\r\n  cardData: CardDef;\r\n  offsetIdx?: number;\r\n  isFaceDown?: boolean;\r\n  onCardSelected?: Function;\r\n  size?: CardScaleDef;\r\n  onClickCard?: Function;\r\n  stackType?: StackType;\r\n}\r\n\r\nexport function Card({ size, cardIdx, cardData, onCardSelected, offsetIdx, stackType }: Props) {\r\n  let style = {};\r\n  if(offsetIdx !== undefined){\r\n    if(stackType === 'side-by-side'){\r\n      style = { left: offsetIdx * 100 };\r\n    }else{\r\n      style = { left: offsetIdx * 2, top: offsetIdx * 4 };\r\n    }\r\n  }\r\n\r\n  console.log('stackType', stackType)\r\n\r\n  const onClick = () => {\r\n    if(cardIdx !== undefined && onCardSelected){\r\n      onCardSelected(cardIdx);\r\n    }\r\n  }\r\n\r\n  const anySize = {\r\n    normal: [ 1, 1 ],\r\n    zoom: [ 1.3, 1.3 ],\r\n    ...size\r\n  } as CardScaleDef;\r\n\r\n  return (\r\n    <Container size={anySize} style={style} onClick={onClick}>\r\n      <FrameOverlay url={cardData.frame.overlayImg}/>\r\n      <ImageContainer>\r\n        {cardData.img && <CardImage url={cardData.img}></CardImage>}\r\n      </ImageContainer>\r\n      <TitleContainer>\r\n        <div>\r\n          <p>{cardData.title}</p>\r\n        </div>\r\n      </TitleContainer>\r\n      <DescriptionContainer>\r\n        <CardDetails \r\n          description={cardData.description}\r\n          modifiers={cardData.modifiers}\r\n        />\r\n      </DescriptionContainer>\r\n      <FrameBg url={cardData.frame.bgImg}/>\r\n    </Container>\r\n  );\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export const ALL_CARDS_MAP: any = {\r\n  \"RACCOON_BITE\": {\r\n    title: 'CURSED MASK',\r\n    description: 'Raccoon bites in this lane do +2 damage.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents1.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'add',\r\n        stat: 'biteDamage',\r\n        value: 2\r\n      }\r\n    ]\r\n  },\r\n  \"RACCOON_LOVE\": {\r\n    title: 'RACCOON LOVE',\r\n    description: 'Raccoons in this lane stay tame for 1 second longer.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents2.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'add',\r\n        stat: 'loveDuration',\r\n        value: 1\r\n      }\r\n    ]\r\n  },\r\n  \"RACCOON_JUMP\": {\r\n    title: 'RACCOON LOVE',\r\n    description: 'Raccoons in this lane can hop.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents3.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'boolean',\r\n        stat: 'canJump',\r\n        value: true\r\n      }\r\n    ]\r\n  },\r\n  \"RACCOON_CORPSE_BUFFET\": {\r\n    title: 'ROTTING BUFFET',\r\n    description: 'Raccoons corpses in this lane act as food bowls.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents4.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'boolean',\r\n        stat: 'corpseBuffet',\r\n        value: true\r\n      }\r\n    ]\r\n  },\r\n  \"RACCOON_FEED\": {\r\n    title: 'CHOW DOWN',\r\n    description: 'Raccoons in this lane eat 20% faster.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents5.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'add',\r\n        stat: 'feedSpeed',\r\n        value: .2\r\n      }\r\n    ]\r\n  },\r\n  \"RACCOON_SPAWNRATE\": {\r\n    title: 'CROWDED NURSERY',\r\n    description: '30% more raccoons in this lane.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents6.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'add',\r\n        stat: 'spawnRate',\r\n        value: .3\r\n      }\r\n    ]\r\n  },\r\n  \"REDRACCOON_SPAWN\": {\r\n    title: 'RED RACCOONS',\r\n    description: 'Tanukis spawn in this lane.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents7.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'boolean',\r\n        stat: 'feedSpeed',\r\n        value: true\r\n      }\r\n    ]\r\n  },\r\n  \"RACCOON_GIBS\": {\r\n    title: 'GIBBED',\r\n    description: 'Gibbed raccoons in this lane scare away others.',\r\n    img: 'assets/cards/raccoon-trapper/status-card-contents8.png',\r\n    frame:{\r\n      overlayImg: 'assets/cards/raccoon-trapper/status-card-frame.png',\r\n      bgImg: 'assets/cards/raccoon-trapper/status-card-frame-opaque.png',\r\n    },\r\n    modifiers:[\r\n      {\r\n        type: 'boolean',\r\n        stat: 'gibbedRaccons',\r\n        value: true\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const DECK_DATA: any = [\r\n  {\r\n    id: 'RACCOON_BITE',\r\n    idx: 0,\r\n    count: 5\r\n  },{\r\n    id: 'RACCOON_LOVE',\r\n    idx: 0,\r\n    count: 4\r\n  },{\r\n    id: 'RACCOON_JUMP',\r\n    idx: 0,\r\n    count: 1\r\n  },{\r\n    id: 'RACCOON_CORPSE_BUFFET',\r\n    idx: 0,\r\n    count: 2\r\n  },{\r\n    id: 'RACCOON_FEED',\r\n    idx: 0,\r\n    count: 5\r\n  },{\r\n    id: 'RACCOON_SPAWNRATE',\r\n    idx: 0,\r\n    count: 5\r\n  },{\r\n    id: 'REDRACCOON_SPAWN',\r\n    idx: 0,\r\n    count: 1\r\n  },{\r\n    id: 'RACCOON_GIBS',\r\n    idx: 0,\r\n    count: 2\r\n  }\r\n];","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { CardBooleanStat, CardDef, CardDefMap, CardModifier, CardStatus, CardValueStat, GameStats, RawCardDef, RawCardModifier } from '../../types';\r\nimport { ALL_CARDS_MAP, DECK_DATA } from '../../app/data/data';\r\n\r\nconst CARDS_PER_DRAW = 4;\r\n\r\nexport interface DeckState {\r\n  deckStatus: CardStatus[];\r\n  hand: number[];\r\n  gameStats: GameStats;\r\n}\r\n\r\nconst initialState: DeckState = {\r\n  deckStatus: [],\r\n  hand: [],\r\n  gameStats: {}\r\n};\r\n\r\nconst parseRawModifiers = (rawModifiers: RawCardModifier[]) => {\r\n  return rawModifiers.map((m: RawCardModifier) => ({\r\n    type: m.type,\r\n    effect:{\r\n      stat: m.stat,\r\n      value: m.value\r\n    }\r\n  } as CardModifier))\r\n}\r\n\r\n\r\nconst PARSED_CARDS_MAP = (() => {\r\n  const retMap = {} as CardDefMap;\r\n  Object.keys(ALL_CARDS_MAP).forEach(cardKey => {\r\n    const card = ALL_CARDS_MAP[cardKey];\r\n    retMap[cardKey] = {\r\n      ...card,\r\n      modifiers: parseRawModifiers(card.modifiers)\r\n    }\r\n  });\r\n\r\n  return retMap;\r\n})();\r\n\r\n\r\nexport const deckSlice = createSlice({\r\n  name: 'deck',\r\n  initialState,\r\n  reducers: {\r\n    initCards: (state) => {\r\n      state.deckStatus = createDeck();\r\n    },\r\n    dealCards: (state) => {\r\n      const curDeckStatus = state.deckStatus.map((dS: CardStatus, idx: number) => {\r\n        if(dS.active){\r\n          return {\r\n            ...dS,\r\n            active: false\r\n          } as CardStatus;\r\n        }\r\n        return dS;\r\n      });\r\n\r\n      const dealtIndicies = drawCardIndicies(curDeckStatus);\r\n\r\n      const now = new Date().getTime();\r\n      state.deckStatus = curDeckStatus.map((dS: CardStatus, idx: number) => {\r\n        if(dealtIndicies.includes(idx)){\r\n          return {\r\n            ...dS,\r\n            dealt: true,\r\n            dealtAt: now + idx,\r\n            active: true\r\n          } as CardStatus;\r\n        }\r\n        return dS;\r\n      });\r\n\r\n      state.hand = dealtIndicies;\r\n    },\r\n    augmentStats: (state, action: PayloadAction<CardModifier>) => {\r\n      if(action.payload.type === 'boolean'){\r\n        const effect = action.payload.effect as CardBooleanStat;\r\n        state.gameStats[effect.stat] = {\r\n          type: 'boolean',\r\n          stat: effect.stat,\r\n          value: effect.value\r\n        } as CardBooleanStat;\r\n      }else if(action.payload.type === 'add'){\r\n        const effect = action.payload.effect as CardValueStat;\r\n        state.gameStats[effect.stat] = {\r\n          type: 'value',\r\n          stat: effect.stat,\r\n          value: ((state.gameStats[effect.stat] as CardValueStat)?.value || 0) + effect.value\r\n        } as CardValueStat;\r\n      }\r\n    },\r\n    chooseCard: (state, action: PayloadAction<any>) => {\r\n      const chosenIdx = action.payload.handIdx;\r\n      const laneId = action.payload.laneId;\r\n      // discard those cards now.\r\n      console.log('put away cards', state.hand.map(h => h))\r\n      state.deckStatus = state.deckStatus.map((dS: CardStatus, idx: number) => {\r\n        if(state.hand.includes(idx)){\r\n          console.log(\"put it away \", idx, chosenIdx)\r\n          return {\r\n            ...dS,\r\n            active: false,\r\n            lane: idx === chosenIdx ? laneId : dS.lane\r\n          } as CardStatus;\r\n        }\r\n        return dS;\r\n      });\r\n\r\n\r\n      state.hand = [];\r\n    }\r\n  }\r\n});\r\n\r\nexport const { initCards, dealCards, augmentStats, chooseCard } = deckSlice.actions;\r\n\r\nexport const getDeckStatus = (state: RootState) => state.data.deckStatus;\r\nexport const getHand = (state: RootState) => state.data.hand;\r\nexport const getGameStats = (state: RootState) => state.data.gameStats;\r\n\r\nexport const getCardData = (cardStatus: CardStatus, deckIdx: number) => {\r\n  return { \r\n    ...PARSED_CARDS_MAP[cardStatus.id],\r\n    deckIdx: deckIdx\r\n  };\r\n};\r\n\r\nexport const selectGameStats = createSelector(\r\n  [getGameStats],\r\n  (gameStats): (CardBooleanStat| CardValueStat)[] => {\r\n    return Object.keys(gameStats).map(key => gameStats[key]) as (CardBooleanStat| CardValueStat)[];\r\n  }\r\n);\r\n\r\nexport const selectDealtHand = createSelector(\r\n  [getHand, getDeckStatus],\r\n  (hand, deckStatus): CardDef[] => {\r\n\r\n    return hand.filter(h => h !== -1).map(h => {\r\n      return getCardData(deckStatus[h], h);\r\n    });\r\n  }\r\n);\r\n\r\nexport const selectDrawPile = createSelector(\r\n  [getDeckStatus],\r\n  (deckStatus): CardDef[] => {\r\n    return deckStatus.filter(d => !d.dealt).map((cS, idx) => {\r\n      return getCardData(cS, idx);\r\n    });\r\n  }\r\n);\r\n\r\nexport const selectDiscardPile = createSelector(\r\n  [getDeckStatus],\r\n  (deckStatus): CardDef[] => {\r\n    return deckStatus\r\n      .filter(d => (d.dealt && !d.active && d.lane === 0))\r\n      .sort((a, b) => (a.dealtAt > b.dealtAt) ? 1 : -1)\r\n      .map((cS, idx) => getCardData(cS, idx));\r\n  }\r\n);\r\n\r\nexport const selectLaneCards = createSelector(\r\n  [getDeckStatus],\r\n  (deckStatus): CardDef[][] => {\r\n    let laneCards = [];\r\n\r\n    for(let l = 1; l <= 3; l++){\r\n      laneCards[l] = deckStatus\r\n        .filter(d => (d.lane === l))\r\n        .sort((a, b) => (a.dealtAt > b.dealtAt) ? 1 : -1)\r\n        .map((cS, idx) => getCardData(cS, idx));\r\n    }\r\n    return laneCards;\r\n  }\r\n);\r\n\r\nexport const drawCardIndicies = (deckStatus: CardStatus[]) => {\r\n  const dealtIndicies: number[] = [];\r\n  let availableDeck = deckStatus.filter(cS => !cS.dealt);\r\n  for(let i = 0; i < CARDS_PER_DRAW; i++){\r\n    if(availableDeck.length === 0) {\r\n      // deck is now empty.\r\n      break;\r\n    }\r\n    const drawnIdx = Math.floor(availableDeck.length * Math.random());\r\n    const thingy = availableDeck[drawnIdx];\r\n    dealtIndicies.push(thingy.deckIdx);\r\n    availableDeck.splice(drawnIdx, 1);\r\n  }\r\n\r\n  return dealtIndicies;\r\n}\r\n\r\nexport const createDeck = () => {\r\n  let allCards = [];\r\n  for(let i = 0; i < DECK_DATA.length; i++){\r\n    const cardInfo = DECK_DATA[i];\r\n    if(PARSED_CARDS_MAP[cardInfo.id]){\r\n      for(let j = 0; j < cardInfo.count; j++){\r\n        allCards.push({\r\n          id: cardInfo.id,\r\n          deckIdx: allCards.length,\r\n          dealt: false,\r\n          dealtAt: 0,\r\n          active: false,\r\n          lane: 0\r\n        } as CardStatus);\r\n      }\r\n    }\r\n  }\r\n\r\n  return allCards;\r\n};\r\n\r\nexport default deckSlice.reducer;","import styled, { css } from 'styled-components';\r\nimport { CARD_HEIGHT, CARD_WIDTH, getColor, mixinFontFamily } from '../../../themes';\r\nimport { CardScaleDef } from '../../../types';\r\n\r\ntype FaceDownCardProps = {\r\n  size: CardScaleDef;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport const FaceDownCard = styled.div<FaceDownCardProps>`\r\n  position:absolute;\r\n  width: ${CARD_WIDTH};\r\n  height: ${CARD_HEIGHT};\r\n  left:50%;\r\n  top:50%;\r\n  border-radius: 2rem;\r\n  transform-origin: top;\r\n  cursor: pointer;\r\n\r\n  transform: scale(${p => p.size.normal[0]}, ${p => p.size.normal[1]}) translate(-50%, -50%);\r\n\r\n  background-color: ${getColor('green')};\r\n  border: .5rem solid ${getColor('grey_dark')};\r\n\r\n  >span{\r\n    ${mixinFontFamily('display')};\r\n    display:block;\r\n    transform: rotate(-90deg);\r\n    font-size:5rem;\r\n    font-weight: bold;\r\n    color: ${getColor('brown_light')};\r\n    margin-top:11rem;\r\n  }\r\n\r\n  &:hover{\r\n    background-color: ${getColor('green_light')};\r\n\r\n    >span{\r\n      color: ${getColor('brown_dark')};\r\n    }\r\n  }\r\n\r\n  ${p => p.isDisabled && css`\r\n    pointer-events:none;\r\n    background-color: ${getColor('grey')};\r\n    border: .5rem solid ${getColor('grey_dark')};\r\n\r\n    >span{\r\n      color: ${getColor('grey_light')};\r\n    }\r\n  `}\r\n`\r\n\r\ninterface Props {\r\n  offsetIdx?: number;\r\n  size?: CardScaleDef;\r\n  onClickCard?: Function,\r\n  isDisabled?: boolean,\r\n}\r\n\r\nexport function CardBack({ size, offsetIdx, onClickCard, isDisabled }: Props) {\r\n  const style = offsetIdx !== undefined ? { left: offsetIdx * .7, top: offsetIdx * 1 } : {};\r\n\r\n  const anySize = {\r\n    normal: [ 1, 1 ],\r\n    zoom: [ 1.3, 1.3 ],\r\n    ...size\r\n  } as CardScaleDef;\r\n\r\n  return (\r\n    <FaceDownCard style={style} size={anySize} isDisabled={isDisabled} onClick={() => onClickCard ? onClickCard() : {}}>\r\n      {!isDisabled && <span>{'DRAW'}</span>}\r\n    </FaceDownCard>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { Card } from './card';\r\nimport { CardDef, CardScaleDef } from '../../../types';\r\nimport { CardBack } from './card-back';\r\n\r\nexport const Container = styled.div`\r\n  position:relative;\r\n`\r\n\r\ntype Props = {\r\n  cards: CardDef[];\r\n  isFaceDown?: boolean;\r\n  stackType?: string;\r\n  onClickCard?: Function;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport function CardPile({ cards, isFaceDown, onClickCard, isDisabled }: Props) {\r\n  const cardSize = {\r\n    normal: [ .5, .5 ],\r\n    zoom: [ .5, .5 ]\r\n  } as CardScaleDef;\r\n\r\n  const onClickCardBack = () => {\r\n    if(!isDisabled && onClickCard) onClickCard();\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      { \r\n        cards.map((cardDef:CardDef, idx: number) => {\r\n          return isFaceDown ? (\r\n            <CardBack key={idx} offsetIdx={idx} size={cardSize} isDisabled={isDisabled} onClickCard={onClickCardBack}/>\r\n          ) : (\r\n            <Card key={idx} offsetIdx={idx} cardData={cardDef} size={cardSize} onClickCard={onClickCard}/>\r\n          );\r\n        })\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../../themes';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { selectGameStats } from '../slice';\r\n\r\n\r\nexport const Container = styled.div`\r\n  position:absolute;\r\n  width:100%;\r\n  top:0;\r\n  background-color: ${getColor('white')};\r\n  color: ${getColor('black')};\r\n`\r\n\r\nexport function GameStats() {\r\n  const gameStats = useAppSelector(selectGameStats);\r\n  if(!gameStats) return null;\r\n\r\n  return (\r\n    <Container>\r\n      {\r\n        gameStats.map(gs => (\r\n          <p key={gs.stat}>{`${gs.stat}: ${gs.value}`}</p>\r\n        ))\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { getColor } from '../../../themes';\r\nimport { CardDef, CardScaleDef } from '../../../types';\r\nimport { Card } from './card';\r\n\r\ninterface LaneBoxProps {\r\n  selectionActive?: boolean;\r\n}\r\nexport const Container = styled.div<LaneBoxProps>`\r\n  position:relative;\r\n  display:inline-block;\r\n  height:33%;\r\n  width:100%;\r\n\r\n  ${p => p.selectionActive && css`\r\n    cursor:pointer;\r\n    &:hover{\r\n      ${Bg}{\r\n        /* border-color: ${getColor('black')}; */\r\n        background-color: ${getColor('brown_light')};\r\n      }\r\n    }\r\n  `}\r\n` \r\n\r\nconst Bg = styled.div`\r\n  position:absolute;\r\n  border:.25rem dashed ${getColor('white')};\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  left:0;\r\n\r\n  z-index:-1;\r\n`\r\n\r\nconst CardContainer = styled.div`\r\n  position: relative;\r\n  width:calc(100%-5rem);\r\n  margin-left:5rem;\r\n  height:100%;\r\n`\r\n\r\nconst Label = styled.div`\r\n  right:1rem;\r\n  top:.5rem;\r\n  position:absolute;\r\n`\r\n\r\ninterface Props {\r\n  selectionActive?: boolean;\r\n  onLaneSelected: Function;\r\n  cards: CardDef[];\r\n  laneId: number;\r\n}\r\n\r\nconst getLaneText = (laneId:number) => {\r\n  switch(laneId){\r\n    case 1: return 'TOP LANE';\r\n    case 2: return 'MIDDLE LANE';\r\n    case 3: return 'BOTTOM LANE';\r\n    default: return '??';\r\n  }\r\n}\r\n\r\nexport function LaneBox({ selectionActive, onLaneSelected, cards, laneId }: Props) {\r\n  const laneText = getLaneText(laneId);\r\n\r\n  const cardSize = {\r\n    normal: [ .5, .5 ],\r\n    zoom: [ 1, 1 ]\r\n  } as CardScaleDef;\r\n\r\n  console.log('lane', laneId, cards);\r\n\r\n  return (\r\n    <Container selectionActive={selectionActive} onClick={() => onLaneSelected(laneId)}>\r\n      <Label><span>{laneText}</span></Label>\r\n      <CardContainer>\r\n        {cards.map((cardDef:CardDef, idx: number) => (\r\n          <Card key={idx} offsetIdx={idx} stackType=\"side-by-side\" cardData={cardDef} size={cardSize} />\r\n        ))}\r\n      </CardContainer>\r\n      <Bg/>\r\n    </Container>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { getColor } from '../../../themes';\r\nimport { selectLaneCards } from '../slice';\r\nimport { LaneBox } from './lanebox';\r\n\r\nexport const Container = styled.div`\r\n  position:relative;\r\n  width:100%;\r\n  height:100%;\r\n  z-index:2;\r\n`\r\n\r\nexport const Details = styled.div`\r\n  height:10%;\r\n  width:100%;\r\n`\r\ninterface Props {\r\n  selectionActive?: boolean;\r\n  onLaneSelected: Function;\r\n}\r\n\r\nexport function LaneZones({ selectionActive, onLaneSelected }: Props) {\r\n\r\n  const laneCards = useAppSelector(selectLaneCards);\r\n  console.log('laneCards', laneCards)\r\n  \r\n  return (\r\n    <Container>\r\n      <LaneBox \r\n        selectionActive={selectionActive}\r\n        onLaneSelected={onLaneSelected}\r\n        cards={laneCards[1]}\r\n        laneId={1} />\r\n      <LaneBox \r\n        selectionActive={selectionActive}\r\n        onLaneSelected={onLaneSelected}\r\n        cards={laneCards[2]}\r\n        laneId={2} />\r\n      <LaneBox \r\n        selectionActive={selectionActive}\r\n        onLaneSelected={onLaneSelected}\r\n        cards={laneCards[3]}\r\n        laneId={3} />\r\n    </Container>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { CARD_HEIGHT, CARD_WIDTH, getColor } from '../../themes';\r\nimport { Card } from './components/card';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { augmentStats, chooseCard, dealCards, initCards, selectDealtHand, selectDiscardPile, selectDrawPile } from './slice';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { CardDef, CardScaleDef } from '../../types';\r\nimport { CardPile } from './components/card-pile';\r\nimport { GameStats } from './components/gamestats';\r\nimport { LaneZones } from './components/lanezones';\r\n\r\nconst Container = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  bottom:0;\r\n  right:0;\r\n  background-color: ${getColor('black')};\r\n  color: ${getColor('white')};\r\n  z-index:-1;\r\n  padding-top:10rem;\r\n  z-index:1;\r\n`\r\ninterface ModalProps {\r\n  isLaneMode?: boolean;\r\n}\r\nconst LaneModeCover = styled.div<ModalProps>`\r\n  opacity:0;\r\n  pointer-events:none;\r\n  \r\n  display:block;\r\n  position:fixed;\r\n  left:0;\r\n  right:0;\r\n  top:0;\r\n  bottom:0;\r\n  z-index:1;\r\n  ${p => p.isLaneMode && css`\r\n    pointer-events:all;\r\n\r\n    background-color: ${getColor('black')};\r\n    opacity: .8;\r\n    transition: opacity .2s ease-out;\r\n  `}\r\n`\r\n\r\nconst Modal = styled.div<ModalProps>`\r\n  width:80%;\r\n  height:80%;\r\n  position:absolute;\r\n  left:10%;\r\n  top:10%;\r\n  border: .5rem solid ${getColor('grey_dark')};\r\n  background-color: ${getColor('brown_dark')};\r\n\r\n  ${p => p.isLaneMode && css`\r\n    border: .5rem solid ${getColor('grey_dark')};\r\n    background-color: ${getColor('black')};\r\n  `}\r\n\r\n  border-radius: 1rem;\r\n`\r\nconst CardContainer = styled.div`\r\n  width:40%;\r\n  height:75%;\r\n\r\n  z-index:1;\r\n`\r\nconst DetailContainer = styled.div`\r\n  height:10%;\r\n  width:100%;\r\n  text-align:center;\r\n`\r\nconst LaneContainer = styled.div`\r\n  position:absolute;\r\n  right:0;\r\n  top:0;\r\n  height:90%;\r\n  width:60%;\r\n  text-align:center;\r\n`\r\n\r\ntype CardWrapperProps = {\r\n  size: CardScaleDef;\r\n}\r\nconst CardWrapper = styled.div<CardWrapperProps>`\r\n  display: inline-block;\r\n  width: 50%;\r\n  height: 83%;\r\n\r\n  width: ${CARD_WIDTH};\r\n  height: ${CARD_HEIGHT};\r\n  \r\n  transform: scale(${p => p.size.normal[0]}, ${p => p.size.normal[1]});\r\n\r\n  position:relative;\r\n\r\n  padding: 1rem;\r\n  margin-bottom:-5rem;\r\n\r\n  &:hover{\r\n    z-index:1;\r\n  }\r\n`\r\n\r\nconst CardStacks = styled.div`\r\n  width:40%;\r\n  height:15%;\r\n\r\n  >div{\r\n    padding:2rem;\r\n    display:inline-block;\r\n    vertical-align: bottom;\r\n    width:50%;\r\n  }\r\n`\r\nconst DrawPile = styled.div`\r\n  width:10rem;\r\n  height:20rem;\r\n`\r\nconst DiscardPile = styled.div`\r\n  width:10rem;\r\n  height:20rem;\r\n`\r\nconst Header = styled.div`\r\n  height:10%;\r\n  width:60%;\r\n  margin-left:40%;\r\n  text-align:center;\r\n\r\n  color: ${getColor('brown_light')};\r\n\r\n  >h2{\r\n    position:fixed;\r\n    z-index:3;\r\n  }\r\n`\r\nconst Body = styled.div`\r\n  height:90%;\r\n  width:100%;\r\n  position:relative;\r\n`\r\n\r\nexport function Main() {\r\n  const dispatch = useAppDispatch();\r\n  const [ heldCardIdx, setHeldCardIdx ] = useState(-1);\r\n  const dealtHand = useAppSelector(selectDealtHand);\r\n  const drawPile = useAppSelector(selectDrawPile);\r\n  const discardPile = useAppSelector(selectDiscardPile);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(initCards());\r\n  }, []);\r\n  \r\n  const onDealButton = () => {\r\n    dispatch(dealCards());\r\n  }\r\n\r\n  const onCardSelected = (cardIdx: number) => {\r\n    setHeldCardIdx(cardIdx);\r\n  }\r\n\r\n  const onLaneSelected = (laneId: number) => {\r\n    console.log('selectedLane', laneId)\r\n    setHeldCardIdx(-1);\r\n    if(heldCardIdx > -1){\r\n      const heldCard = dealtHand[heldCardIdx];\r\n      for(let i = 0; i < heldCard.modifiers.length; i++){\r\n        dispatch(augmentStats(heldCard.modifiers[i]));\r\n        dispatch(chooseCard({\r\n          handIdx: heldCard.deckIdx, \r\n          laneId: laneId\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  const isLaneMode = useMemo(() => heldCardIdx > -1, [ heldCardIdx ]);\r\n\r\n\r\n  const tableCardSize = {\r\n    normal: [ 0.9, 0.9 ],\r\n    zoom: [ 1.3, 1.3 ]\r\n  } as CardScaleDef;\r\n\r\n  return (\r\n    <Container>\r\n      <GameStats />\r\n      <Modal isLaneMode={isLaneMode}>\r\n        <Header>\r\n          {isLaneMode ? (\r\n            <h2>{'SELECT A LANE'}</h2>\r\n          ):(\r\n            <h2>{'CHOOSE SOME CARDS'}</h2>\r\n          )}\r\n        </Header>\r\n        <Body>\r\n          <CardStacks>\r\n            <DrawPile>\r\n              <CardPile cards={drawPile} isFaceDown={true} onClickCard={onDealButton} isDisabled={dealtHand.length > 0}/>\r\n            </DrawPile>\r\n            <DiscardPile>\r\n              <CardPile cards={discardPile} />\r\n            </DiscardPile>\r\n          </CardStacks>\r\n          <CardContainer>\r\n            { dealtHand.map((cardDef:CardDef, idx: number) => (\r\n              <CardWrapper key={idx} size={tableCardSize}>\r\n                <Card cardIdx={idx} cardData={cardDef} onCardSelected={onCardSelected} size={tableCardSize} />\r\n              </CardWrapper>\r\n            )) }\r\n          </CardContainer>\r\n          <DetailContainer><p>{\r\n            'Some details can go here?'\r\n          }</p></DetailContainer>\r\n          <LaneModeCover isLaneMode={isLaneMode} />\r\n          <LaneContainer>\r\n            <LaneZones selectionActive={isLaneMode} onLaneSelected={onLaneSelected} />\r\n          </LaneContainer>\r\n        </Body>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n","import  { useState } from 'react';\r\nimport { getColor } from './themes/';\r\nimport { Main } from './scenes/main';\r\nimport { HashRouter, Route, Routes, Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const ScHeader = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  left:0;\r\n  transition: top .5s ease-in-out;\r\n\r\n  width: 100%;\r\n  height:10rem;\r\n  border-bottom:1rem solid blue;\r\n  color:white;\r\n  z-index:1;\r\n  background-color:black;\r\n\r\n  &.collapsed{\r\n    top:-8rem;\r\n    transition: top .5s ease-in-out;\r\n  }\r\n\r\n  >.link-button{\r\n    color:white;\r\n    display:inline-block;\r\n    vertical-align:middle;\r\n    margin:1.4rem 1.8rem;\r\n    transition: color .5s ease-in;\r\n    &:hover{\r\n      color: ${getColor('pink')};\r\n      transition: color .2s ease-out;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScStage = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  padding-top:5rem;\r\n`\r\n\r\nfunction App() {\r\n  const [ collapsed, setCollapsed ] = useState(false);\r\n  const pages = [\r\n    {\r\n      route: '/cards',\r\n      text: 'Cards',\r\n      element: <Main/>\r\n    }\r\n  ]\r\n  \r\n  return (\r\n    <HashRouter>\r\n      <ScHeader className={ collapsed ? 'collapsed' : ''} onClick={() => setCollapsed(!collapsed)}>\r\n        {pages.map((p, i) => (\r\n          <Link key={i} to={p.route} className=\"link-button\">\r\n            <h2>{p.text}</h2>\r\n          </Link>\r\n        ))}\r\n      </ScHeader>\r\n      <ScStage>\r\n        <Routes>\r\n          {pages.map((p, i) => (\r\n            <Route key={i} path={p.route} element={p.element} />\r\n          ))}\r\n        </Routes>\r\n      </ScStage>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport deckReducer from '../scenes/main/slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    data: deckReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './themes/fonts.css';\r\nimport GlobalStyle from './themes/';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n      <GlobalStyle />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}